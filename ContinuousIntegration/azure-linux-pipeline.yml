# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - fs-modernize

stages:
  - stage: Lint
    jobs:
      - job: LinuxLint
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: sudo apt-get update -y
          - script: sudo apt-get install -y libxml2-utils
          - script: xmllint --noout ./**/*.xml
        displayName: 'Linting'
  - stage: CollectCachedArtifacts
    dependsOn: Lint
    condition: succeeded()
    jobs:
      - job: CheckGitAnnex
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: '1eee1365-4e03-49ce-a8e3-c84dd1212c9e'
              definition: '2'
              buildVersionToDownload: 'specific'
              pipelineId: '31'
              artifactName: 'GitAnnex'
              targetPath: '$(Agent.BuildDirectory)'
        displayName: 'Check Cached Git Annex Data'
  - stage: DownloadArtifacts
    dependsOn: Lint
    condition: failed('CollectCachedArtifacts')
    jobs:
      - job: DownloadGitAnnex
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - bash: ./ci-scripts/cache.git.annex.sh
            env:
              CURRENT_WORK_DIR: $(Agent.BuildDirectory)
          - publish: $(Agent.BuildDirectory)/annex-cache
            artifact: GitAnnex
        displayName: 'Download and Cache Git Annex Data'
  - stage: Build
    dependsOn:
      - CollectCachedArtifacts
      - DownloadArtifacts
    condition: or(succeeded('DownloadArtifacts'), succeeded('CollectCachedArtifacts'))
    jobs:
      - job: XenialBuildGCC
        variables:
          HOSTING_OS: xenial
          HOSTING_COMPILER: gcc
          TESTING_TYPE: '_Unit_Tests'
          AZURE_SOURCE_DIR: '$(Build.SourcesDirectory)/distribution'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: '1eee1365-4e03-49ce-a8e3-c84dd1212c9e'
              definition: '2'
              buildVersionToDownload: 'specific'
              pipelineId: '31'
              artifactName: 'GitAnnex'
              targetPath: '$(Agent.BuildDirectory)/GitAnnex'
          - download: current
            artifact: 'GitAnnex'
            condition: failed()
          - checkout: self
            submodules: true
          - script: |
              export TESTING_TYPE
              git remote add cache ../GitAnnex
              sudo apt-get install -y git-annex
              git config --global user.email "ahmed.s.aboualiaa@gmail.com"
              git config --global user.name "Ahmed Abou-Aliaa"
              git annex copy --from cache
            displayName: 'Setting up Git Annex'
          - script: |
              ./ci-scripts/travis.configure.${HOSTING_OS}.${HOSTING_COMPILER}.Build.sh
              ./ci-scripts/travis.script.${HOSTING_OS}.Build.sh
              rm -rf ../GitAnnex
            displayName: 'Building'
          - script: |
              echo $AZURE_SOURCE_DIR
              export AZURE_SOURCE_DIR
              ./ci-scripts/travis.script.${HOSTING_OS}.Unit.sh $HOSTING_COMPILER
            displayName: 'Unit Testing'
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'cTest'
              testResultsFiles: '**/Test.xml'
              testRunTitle: 'cTest-$(HOSTING_OS)-$(HOSTING_COMPILER)-UnitTests'
        displayName: 'Ubuntu Xenial Build GCC'
      - job: XenialBuildClang
        variables:
          HOSTING_OS: xenial
          HOSTING_COMPILER: clang
          TESTING_TYPE: '_Unit_Tests'
          AZURE_SOURCE_DIR: '$(Build.SourcesDirectory)/distribution'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: '1eee1365-4e03-49ce-a8e3-c84dd1212c9e'
              definition: '2'
              buildVersionToDownload: 'specific'
              pipelineId: '31'
              artifactName: 'GitAnnex'
              targetPath: '$(Agent.BuildDirectory)/GitAnnex'
          - download: current
            artifact: 'GitAnnex'
            condition: failed()
          - checkout: self
            submodules: true
          - script: |
              git remote add cache ../GitAnnex
              sudo apt-get install -y git-annex
              git config --global user.email "ahmed.s.aboualiaa@gmail.com"
              git config --global user.name "Ahmed Abou-Aliaa"
              git annex copy --from cache
            displayName: 'Setting up Git Annex'
          - script: |
              export TESTING_TYPE
              ./ci-scripts/travis.configure.${HOSTING_OS}.${HOSTING_COMPILER}.Build.sh
              ./ci-scripts/travis.script.${HOSTING_OS}.Build.sh
              rm -rf ../GitAnnex
            displayName: 'Building'
          - script: |
              echo $AZURE_SOURCE_DIR
              export AZURE_SOURCE_DIR
              export PATH="$(pwd)/cmake-3.16.4-Linux-x86_64/bin:$PATH"
              ./ci-scripts/travis.script.${HOSTING_OS}.Unit.sh $HOSTING_COMPILER
            displayName: 'Unit Testing'
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'cTest'
              testResultsFiles: '**/Test.xml'
              testRunTitle: 'cTest-$(HOSTING_OS)-$(HOSTING_COMPILER)-UnitTests'
        displayName: 'Ubuntu Xenial Build Clang'
      - job: BionicBuildGCC
        variables:
          HOSTING_OS: bionic
          HOSTING_COMPILER: gcc
          TESTING_TYPE: '_Unit_Tests'
          AZURE_SOURCE_DIR: '$(Build.SourcesDirectory)/distribution'
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: '1eee1365-4e03-49ce-a8e3-c84dd1212c9e'
              definition: '2'
              buildVersionToDownload: 'specific'
              pipelineId: '31'
              artifactName: 'GitAnnex'
              targetPath: '$(Agent.BuildDirectory)/GitAnnex'
          - download: current
            artifact: 'GitAnnex'
            condition: failed()
          - checkout: self
            submodules: true
          - script: |
              export TESTING_TYPE
              git remote add cache ../GitAnnex
              sudo apt-get install -y git-annex
              git config --global user.email "ahmed.s.aboualiaa@gmail.com"
              git config --global user.name "Ahmed Abou-Aliaa"
              git annex copy --from cache
            displayName: 'Setting up Git Annex'
          - script: |
              ./ci-scripts/travis.configure.${HOSTING_OS}.${HOSTING_COMPILER}.Build.sh
              ./ci-scripts/travis.script.${HOSTING_OS}.Build.sh
              rm -rf ../GitAnnex
            displayName: 'Building'
          - script: |
              echo $AZURE_SOURCE_DIR
              export AZURE_SOURCE_DIR
              ./ci-scripts/travis.script.${HOSTING_OS}.Unit.sh $HOSTING_COMPILER
            displayName: 'Unit Testing'
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'cTest'
              testResultsFiles: '**/Test.xml'
              testRunTitle: 'cTest-$(HOSTING_OS)-$(HOSTING_COMPILER)-UnitTests'
        displayName: 'Ubuntu Bionic Build GCC'
      - job: BionicBuildClang
        variables:
          HOSTING_OS: bionic
          HOSTING_COMPILER: clang
          TESTING_TYPE: '_Unit_Tests'
          AZURE_SOURCE_DIR: '$(Build.SourcesDirectory)/distribution'
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: '1eee1365-4e03-49ce-a8e3-c84dd1212c9e'
              definition: '2'
              buildVersionToDownload: 'specific'
              pipelineId: '31'
              artifactName: 'GitAnnex'
              targetPath: '$(Agent.BuildDirectory)/GitAnnex'
          - download: current
            artifact: 'GitAnnex'
            condition: failed()
          - checkout: self
            submodules: true
          - script: |
              git remote add cache ../GitAnnex
              sudo apt-get install -y git-annex
              git config --global user.email "ahmed.s.aboualiaa@gmail.com"
              git config --global user.name "Ahmed Abou-Aliaa"
              git annex copy --from cache
            displayName: 'Setting up Git Annex'
          - script: |
              export TESTING_TYPE
              ./ci-scripts/travis.configure.${HOSTING_OS}.${HOSTING_COMPILER}.Build.sh
              ./ci-scripts/travis.script.${HOSTING_OS}.Build.sh
              rm -rf ../GitAnnex
            displayName: 'Building'
          - script: |
              echo $AZURE_SOURCE_DIR
              export AZURE_SOURCE_DIR
              export PATH="$(pwd)/cmake-3.16.4-Linux-x86_64/bin:$PATH"
              ./ci-scripts/travis.script.${HOSTING_OS}.Unit.sh $HOSTING_COMPILER
            displayName: 'Unit Testing'
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'cTest'
              testResultsFiles: '**/Test.xml'
              testRunTitle: 'cTest-$(HOSTING_OS)-$(HOSTING_COMPILER)-UnitTests'
        displayName: 'Ubuntu Bionic Build Clang'
      - job: XenialIntegrationTestGCC
        timeoutInMinutes: 300
        variables:
          HOSTING_OS: xenial
          HOSTING_COMPILER: gcc
          TESTING_TYPE: '_Integration_Tests'
          AZURE_SOURCE_DIR: '$(Build.SourcesDirectory)/distribution'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: '1eee1365-4e03-49ce-a8e3-c84dd1212c9e'
              definition: '2'
              buildVersionToDownload: 'specific'
              pipelineId: '31'
              artifactName: 'GitAnnex'
              targetPath: '$(Agent.BuildDirectory)/GitAnnex'
          - download: current
            artifact: 'GitAnnex'
            condition: failed()
          - checkout: self
            submodules: true
          - script: |
              git remote add cache ../GitAnnex
              sudo apt-get install -y git-annex
              git config --global user.email "ahmed.s.aboualiaa@gmail.com"
              git config --global user.name "Ahmed Abou-Aliaa"
              git annex copy --from cache
            displayName: 'Setting up Git Annex'
          - script: |
              export TESTING_TYPE
              ./ci-scripts/travis.configure.${HOSTING_OS}.${HOSTING_COMPILER}.Build.sh
              ./ci-scripts/travis.script.${HOSTING_OS}.Build.sh
              rm -rf ../GitAnnex
            displayName: 'Building'
          - script: |
              echo $AZURE_SOURCE_DIR
              export AZURE_SOURCE_DIR
              ./ci-scripts/travis.script.${HOSTING_OS}.Integration.sh $HOSTING_COMPILER
            displayName: 'Integration Testing'
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'cTest'
              testResultsFiles: '**/Test.xml'
              testRunTitle: 'cTest-$(HOSTING_OS)-$(HOSTING_COMPILER)-IntegrationTests'
        displayName: 'Ubuntu Xenial Integration Test GCC'
      - job: XenialIntegrationTestClang
        timeoutInMinutes: 300
        variables:
          HOSTING_OS: xenial
          HOSTING_COMPILER: clang
          TESTING_TYPE: '_Integration_Tests'
          AZURE_SOURCE_DIR: '$(Build.SourcesDirectory)/distribution'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: '1eee1365-4e03-49ce-a8e3-c84dd1212c9e'
              definition: '2'
              buildVersionToDownload: 'specific'
              pipelineId: '31'
              artifactName: 'GitAnnex'
              targetPath: '$(Agent.BuildDirectory)/GitAnnex'
          - download: current
            artifact: 'GitAnnex'
            condition: failed()
          - checkout: self
            submodules: true
          - script: |
              git remote add cache ../GitAnnex
              sudo apt-get install -y git-annex
              git config --global user.email "ahmed.s.aboualiaa@gmail.com"
              git config --global user.name "Ahmed Abou-Aliaa"
              git annex copy --from cache
            displayName: 'Setting up Git Annex'
          - script: |
              export TESTING_TYPE
              ./ci-scripts/travis.configure.${HOSTING_OS}.${HOSTING_COMPILER}.Build.sh
              ./ci-scripts/travis.script.${HOSTING_OS}.Build.sh
              rm -rf ../GitAnnex
            displayName: 'Building'
          - script: |
              echo $AZURE_SOURCE_DIR
              export AZURE_SOURCE_DIR
              export PATH="$(pwd)/cmake-3.16.4-Linux-x86_64/bin:$PATH"
              ./ci-scripts/travis.script.${HOSTING_OS}.Integration.sh $HOSTING_COMPILER
            displayName: 'Integration Testing'
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'cTest'
              testResultsFiles: '**/Test.xml'
              testRunTitle: 'cTest-$(HOSTING_OS)-$(HOSTING_COMPILER)-IntegrationTests'
        displayName: 'Ubuntu Xenial Integration Test Clang'
      - job: BionicIntegrationTestGCC
        timeoutInMinutes: 300
        variables:
          HOSTING_OS: bionic
          HOSTING_COMPILER: gcc
          TESTING_TYPE: '_Integration_Tests'
          AZURE_SOURCE_DIR: '$(Build.SourcesDirectory)/distribution'
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: '1eee1365-4e03-49ce-a8e3-c84dd1212c9e'
              definition: '2'
              buildVersionToDownload: 'specific'
              pipelineId: '31'
              artifactName: 'GitAnnex'
              targetPath: '$(Agent.BuildDirectory)/GitAnnex'
          - download: current
            artifact: 'GitAnnex'
            condition: failed()
          - checkout: self
            submodules: true
          - script: |
              git remote add cache ../GitAnnex
              sudo apt-get install -y git-annex
              git config --global user.email "ahmed.s.aboualiaa@gmail.com"
              git config --global user.name "Ahmed Abou-Aliaa"
              git annex copy --from cache
            displayName: 'Setting up Git Annex'
          - script: |
              export TESTING_TYPE
              ./ci-scripts/travis.configure.${HOSTING_OS}.${HOSTING_COMPILER}.Build.sh
              ./ci-scripts/travis.script.${HOSTING_OS}.Build.sh
              rm -rf ../GitAnnex
            displayName: 'Building'
          - script: |
              echo $AZURE_SOURCE_DIR
              export AZURE_SOURCE_DIR
              ./ci-scripts/travis.script.${HOSTING_OS}.Integration.sh $HOSTING_COMPILER
            displayName: 'Integration Testing'
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'cTest'
              testResultsFiles: '**/Test.xml'
              testRunTitle: 'cTest-$(HOSTING_OS)-$(HOSTING_COMPILER)-IntegrationTests'
        displayName: 'Ubuntu Bionic Integration Test GCC'
      - job: BionicIntegrationTestClang
        timeoutInMinutes: 300
        variables:
          HOSTING_OS: bionic
          HOSTING_COMPILER: clang
          TESTING_TYPE: '_Integration_Tests'
          AZURE_SOURCE_DIR: '$(Build.SourcesDirectory)/distribution'
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: '1eee1365-4e03-49ce-a8e3-c84dd1212c9e'
              definition: '2'
              buildVersionToDownload: 'specific'
              pipelineId: '31'
              artifactName: 'GitAnnex'
              targetPath: '$(Agent.BuildDirectory)/GitAnnex'
          - download: current
            artifact: 'GitAnnex'
            condition: failed()
          - checkout: self
            submodules: true
          - script: |
              git remote add cache ../GitAnnex
              sudo apt-get install -y git-annex
              git config --global user.email "ahmed.s.aboualiaa@gmail.com"
              git config --global user.name "Ahmed Abou-Aliaa"
              git annex copy --from cache
            displayName: 'Setting up Git Annex'
          - script: |
              export TESTING_TYPE
              ./ci-scripts/travis.configure.${HOSTING_OS}.${HOSTING_COMPILER}.Build.sh
              ./ci-scripts/travis.script.${HOSTING_OS}.Build.sh
              rm -rf ../GitAnnex
            displayName: 'Building'
          - script: |
              echo $AZURE_SOURCE_DIR
              export AZURE_SOURCE_DIR
              export PATH="$(pwd)/cmake-3.16.4-Linux-x86_64/bin:$PATH"
              ./ci-scripts/travis.script.${HOSTING_OS}.Integration.sh $HOSTING_COMPILER
            displayName: 'Integration Testing'
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'cTest'
              testResultsFiles: '**/Test.xml'
              testRunTitle: 'cTest-$(HOSTING_OS)-$(HOSTING_COMPILER)-IntegrationTests'
        displayName: 'Ubuntu Bionic Integration Test Clang'
