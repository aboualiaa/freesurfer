#os: linux
#dist: bionic

#cache:
#  - apt
#  - ccache

git:
  depth: false
  quiet: true

language: cpp

jobs:
  include:
    - os: osx
      osx_image: xcode11.3
      addons:
        homebrew:
          packages:
            - itk
            - vtk
            - petsc
            - cmake
            - python@3
            - gcc@9
            - jemalloc
            - tcsh
            - armadillo
            - qt
            - hdf5
            - libomp
            - szip
            - fltk
            - open-mpi
            - eigen
      cache:
        directories:
          - packages/hpx
          - cmake-build-release

before_install:
  - alias python='python3'
  - export PATH="/usr/local/opt/python/libexec/bin:$PATH"
  - curl -fsSL https://github.com/Kitware/ninja/releases/download/v1.9.0.g99df1.kitware.dyndep-1.jobserver-1/ninja-1.9.0.g99df1.kitware.dyndep-1.jobserver-1_x86_64-apple-darwin.tar.gz -o ninja.tar.gz
  - tar -xzvf ninja.tar.gz
  - sudo cp ./ninja-1.9.0.g99df1.kitware.dyndep-1.jobserver-1_x86_64-apple-darwin/ninja /usr/local/bin/ninja
  - git clone https://github.com/MestreLion/git-tools.git
  - export PATH="./git-tools:$PATH"
  - git-restore-mtime
  - pushd ./packages/GSL
  - ../../git-tools/git-restore-mtime && popd
  - pushd ./packages/abseil-cpp
  - ../../git-tools/git-restore-mtime && popd
  - pushd ./packages/benchmark
  - ../../git-tools/git-restore-mtime && popd
  - pushd ./packages/googletest
  - ../../git-tools/git-restore-mtime && popd
  - pushd ./packages/fmt
  - ../../git-tools/git-restore-mtime && popd
  - pushd ./packages/spdlog
  - ../../git-tools/git-restore-mtime && popd
  - if [ -d ./packages/hpx ]; then
    echo "cached hpx found -- nothing to download, installing";
    pushd ./packages/hpx/cmake-build-release;
    make -j$(nproc) install;
    popd;
    else
    git clone https://github.com/STEllAR-GROUP/hpx.git packages/hpx;
    cd ./packages/hpx;
    mkdir cmake-build-release && cd ./cmake-build-release;
    cmake .. -DJEMALLOC_ROOT=/usr/local/opt/jemalloc -DHPX_WITH_MALLOC=jemalloc;
    make -j$(nproc) install;
    cd ../../../;
    fi

script:
  - sudo xcode-select -s /Applications/Xcode.app
  - mkdir -p cmake-build-release && cd ./cmake-build-release
  - cmake -G Ninja -DGEMS_BUILD_MATLAB=OFF ..
  - cmake -G Ninja -DGEMS_BUILD_MATLAB=OFF .. # again so that appleclang finds openMP
  - ninja

# os: linux
#      addons:
#        apt:
#          packages:
#            #            - gfortran
#            - git
#
#before_install:
#  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
#  - sudo apt-get -q update
#  - sudo apt-get -y install gcc-9
#  - sudo apt-get -y install gfortran-9
#  - sudo apt-get -y install cmake
#  - sudo apt-get -y install python3.7-dev
#  - sudo apt-get -y install libxi-dev
#  - sudo apt-get -y install liblapack-dev
#  - sudo apt-get -y install tcsh
#  - sudo apt-get -y install curl
#  #  - sudo apt-get -y install git
#  - sudo apt-get -y install libx11-dev

#install:
#  - curl --connect-timeout 8 --retry 5 -O http://surfer.nmr.mgh.harvard.edu/pub/data/fspackages/prebuilt/centos7-packages.tar.gz
#  - tar -xzf centos7-packages.tar.gz
#
#script:
#  - cmake . -DFS_PACKAGES_DIR=packages -DBUILD_GUIS=OFF && make -j4
