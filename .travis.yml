git:
  depth: 1
  quiet: true

language: cpp
stages:
  - build
  - unit

jobs:
  include:
    - os: osx
      stage: build
      env:
        - HOSTING_OS=osx
        - PATH="/usr/local/opt/python/libexec/bin:$PATH"
        - PATH="/usr/local/opt/llvm/bin:$PATH"
        - HOSTING_COMPILER=appleclang
      osx_image: xcode11.3
      addons:
        homebrew:
          update: true
          packages:
            - itk
            - vtk
            - petsc
            - cmake
            - python@3
            - jemalloc
            - tcsh
            - armadillo
            - qt
            - hdf5
            - libomp
            - szip
            - fltk
            - open-mpi
            - eigen
            - ninja
            - git-annex
            - lcov
            - gts
      cache:
        directories:
          - cmake-build-debug
    - os: linux
      stage: build
      env:
        - HOSTING_OS=trusty
        - HOSTING_COMPILER=gcc
      dist: trusty
      addons:
        apt:
          packages:
            - gfortran
            - libxi-dev
            - liblapack-dev
            - python3.5-dev
            - tcsh
            - curl
            - git
            - cmake
      cache:
        - apt
        - ccache
    - os: linux
      stage: build
      env:
        - HOSTING_OS=xenial
        - HOSTING_COMPILER=gcc
      dist: xenial
      addons:
        apt:
          packages:
            - gfortran
            - libxi-dev
            - liblapack-dev
            - python3.5-dev
            - tcsh
            - curl
            - git
            - cmake
      cache:
        - apt
        - ccache
    - os: linux
      stage: build
      env:
        - HOSTING_OS=bionic
        - HOSTING_COMPILER=gcc
      dist: bionic
      addons:
        apt:
          packages:
            - gfortran
            - libxi-dev
            - liblapack-dev
            - python3.6-dev
            - tcsh
            - curl
            - git
            - cmake
      cache:
        - apt
        - ccache
    - os: linux
      stage: build
      env:
        - HOSTING_OS=trusty
        - HOSTING_COMPILER=clang
        - PATH="/usr/local/clang_9.0.0/bin:$PATH"
        - LD_LIBRARY_PATH="/usr/local/clang_9.0.0/lib:$LD_LIBRARY_PATH"
      dist: trusty
      addons:
        apt:
          packages:
            - gfortran
            - libxi-dev
            - liblapack-dev
            - python3.5-dev
            - tcsh
            - curl
            - git
            - cmake
      cache:
        - apt
        - ccache
    - os: linux
      stage: build
      env:
        - HOSTING_OS=xenial
        - HOSTING_COMPILER=clang
        - PATH="/usr/local/clang_9.0.0/bin:$PATH"
        - LD_LIBRARY_PATH="/usr/local/clang_9.0.0/lib:$LD_LIBRARY_PATH"
      dist: xenial
      addons:
        apt:
          packages:
            - gfortran
            - libxi-dev
            - liblapack-dev
            - python3.5-dev
            - tcsh
            - curl
            - git
            - cmake
      cache:
        - apt
        - ccache
    - os: linux
      stage: build
      env:
        - HOSTING_OS=bionic
        - HOSTING_COMPILER=clang
        - PATH="/usr/local/clang_9.0.0/bin:$PATH"
        - LD_LIBRARY_PATH="/usr/local/clang_9.0.0/lib:$LD_LIBRARY_PATH"
      dist: bionic
      addons:
        apt:
          packages:
            - gfortran
            - libxi-dev
            - liblapack-dev
            - python3.6-dev
            - tcsh
            - curl
            - git
            - cmake
      cache:
        - apt
        - ccache
    - os: osx
      stage: build
      env:
        - HOSTING_OS=osx
        - PATH="/usr/local/opt/python/libexec/bin:$PATH"
        - HOSTING_COMPILER=clang
        - PATH="/usr/local/opt/llvm/bin:$PATH"
        - LDFLAGS="-L/usr/local/opt/llvm/lib"
        - CPPFLAGS="-I/usr/local/opt/llvm/include"
        - CC=/usr/local/opt/llvm/bin/clang
        - CXX=/usr/local/opt/llvm/bin/clang++
      osx_image: xcode11.3
      addons:
        homebrew:
          update: true
          packages:
            - itk
            - vtk
            - petsc
            - cmake
            - python@3
            - jemalloc
            - tcsh
            - armadillo
            - qt
            - hdf5
            - libomp
            - szip
            - fltk
            - open-mpi
            - eigen
            - ninja
            - llvm
            - gts
    - os: osx
      stage: build
      env:
        - HOSTING_OS=osx
        - PATH="/usr/local/opt/python/libexec/bin:$PATH"
        - PATH="/usr/local/opt/gcc/bin:$PATH"
        - HOSTING_COMPILER=gcc
        - CC=gcc-9
        - CXX=g++-9
      osx_image: xcode11.3
      addons:
        homebrew:
          update: true
          packages:
            - itk
            - vtk
            - petsc
            - cmake
            - python@3
            - gcc@9
            - jemalloc
            - tcsh
            - armadillo
            - qt
            - hdf5
            - libomp
            - szip
            - fltk
            - open-mpi
            - eigen
            - ninja
            - gts
    - os: osx
      stage: unit
      env:
        - HOSTING_OS=osx
        - PATH="/usr/local/opt/python/libexec/bin:$PATH"
        - PATH="/usr/local/opt/llvm/bin:$PATH"
        - HOSTING_COMPILER=appleclang
      osx_image: xcode11.3
      addons:
        homebrew:
          update: true
          packages:
            - itk
            - vtk
            - petsc
            - cmake
            - python@3
            - jemalloc
            - tcsh
            - armadillo
            - qt
            - hdf5
            - libomp
            - szip
            - fltk
            - open-mpi
            - eigen
            - ninja
            - lcov
            - git-annex
            - gts

before_install:
  - ./ci-scripts/travis.configure.${HOSTING_OS}.${HOSTING_COMPILER}.${TRAVIS_BUILD_STAGE_NAME}.sh

script:
  - ./ci-scripts/travis.script.${HOSTING_OS}.${TRAVIS_BUILD_STAGE_NAME}.sh

before_cache:
  - if [[ $TRAVIS_BUILD_STAGE_NAME == "Unit" ]]; then cd ./cmake-build-debug && rm -f ./**/testdata.tar.gz; fi
  - if [[ $TRAVIS_BUILD_STAGE_NAME == "Unit" ]]; then lcov --capture --directory ./cmake-build-debug/ --output-file ./coverage.info; fi
  - if [[ $TRAVIS_BUILD_STAGE_NAME == "Unit" ]]; then bash <(curl -s https://codecov.io/bash) -f ./coverage.info -t ${CODECOV_TOKEN}; fi
  - cd ./cmake-build-debug;
    ctest --schedule-random --timeout 150 -j 6;
    lcov --capture --directory . --output-file ./coverage.info;
    bash <(curl -s https://codecov.io/bash) -f ./coverage.info -t ${CODECOV_TOKEN};
    rm -f ./**/testdata.tar.gz;
